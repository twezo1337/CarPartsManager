unit Unit6;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.DBCtrls, Vcl.WinXPickers,
  Vcl.StdCtrls, Vcl.ExtCtrls, Data.DB, Vcl.Grids, Vcl.DBGrids, Vcl.Mask;

type
  TForm6 = class(TForm)
    P_EditOperationInfo: TPanel;
    GB_DateTime: TGroupBox;
    GB_Supplier: TGroupBox;
    DatePicker1: TDatePicker;
    TimePicker1: TTimePicker;
    DBL_supplier: TDBLookupComboBox;
    B_ModifyOperationInfo: TButton;
    DBGrid1: TDBGrid;
    P_BaseControl: TPanel;
    P_ModifyData: TPanel;
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    B_CompleteModifyOperation: TButton;
    Label1: TLabel;
    DBText1: TDBText;
    DBL_goods_selector: TDBLookupComboBox;
    Label2: TLabel;
    Label3: TLabel;
    Button4: TButton;
    Button5: TButton;
    DBEdit1: TDBEdit;
    procedure DatePicker1Change(Sender: TObject);
    procedure TimePicker1Change(Sender: TObject);
    procedure B_ModifyOperationInfoClick(Sender: TObject);
    procedure B_CompleteModifyOperationClick(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure Button5Click(Sender: TObject);
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
    procedure FormShow(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form6: TForm6;

implementation

{$R *.dfm}

uses Unit2, Unit5;

procedure TForm6.Button1Click(Sender: TObject);
begin
  if DataModule2.T_op_goods_list.State = dsBrowse then
 begin
 DBGrid1.Enabled := false; // Деактивируем компонент DBGrid1
 // Указываем в параметре, что товар не выбран
 DataModule2.Q_v_selector_goods.Parameters[1].Value := -1;
 // Обновляем НД списка товаров для DBL_goods_selector
 DataModule2.Q_v_selector_goods.Requery();
 // Включаем режим добавления
 DataModule2.T_op_goods_list.Append;
 P_ModifyData.Visible := true; // Показываем панель
 P_BaseControl.Visible := false; // Скрываем панель
 P_EditOperationInfo.Enabled := false; // Деактивируем панель
 end;
end;

procedure TForm6.Button2Click(Sender: TObject);
begin
  if DataModule2.T_op_goods_list.State = dsBrowse then
   begin
     DBGrid1.Enabled := false; // Деактивируем компонент DBGrid1
     // Синхронизируем набор данных со списком выбора
     DataModule2.Q_v_selector_goods.Locate('IDgc',
     DataModule2.T_op_goods_listIDgc.Value, []);
     DataModule2.T_op_goods_list.edit; // Активируем редактирование НД
     P_ModifyData.Visible := true; // Показываем панель
     P_BaseControl.Visible := false; // Скрываем панель
     P_EditOperationInfo.Enabled := false; // Деактивируем панель
   end;
end;

procedure TForm6.Button3Click(Sender: TObject);
begin
  if DataModule2.T_op_goods_list.State = dsBrowse then
 if MessageDlg('Подтвердите удаление записи', mtConfirmation,
 [mbYes, mbNo], 0) = mrYes then
 DataModule2.T_op_goods_list.Delete;
end;

procedure TForm6.Button4Click(Sender: TObject);
begin
  if DataModule2.T_op_goods_list.State in [dsEdit, dsInsert] then
 begin // Если находимся в режиме редактирования или добавления то
 DataModule2.T_op_goods_list.post; // Сохраняем запись НД
 P_BaseControl.Visible := true; // Показываем панель
 P_ModifyData.Visible := false; // Скрываем панель
 DBGrid1.Enabled := true; // Активируем компонент DBGrid1
 P_EditOperationInfo.Enabled := true; // Активируем панель
 end;
end;

procedure TForm6.Button5Click(Sender: TObject);
begin
  if DataModule2.T_op_goods_list.State in [dsEdit, dsInsert] then
 begin // Если находимся в режиме редактирования или добавления то
 DataModule2.T_op_goods_list.Cancel; // Отменяем изменения в НД
 P_BaseControl.Visible := true; // Показываем панель
 P_ModifyData.Visible := false; // Скрываем панель
 DBGrid1.Enabled := true; // Активируем компонент DBGrid1
 P_EditOperationInfo.Enabled := true; // Активируем панель
 end;
end;

procedure TForm6.B_CompleteModifyOperationClick(Sender: TObject);
begin
  // Закрываем форму
 Form6.Close;
end;

procedure TForm6.B_ModifyOperationInfoClick(Sender: TObject);
begin
  // Если набора данных в режиме редактирования
 if DataModule2.T_operations.State = dsEdit then
 // Запоминаем изменения
 DataModule2.T_operations.post;
end;

procedure TForm6.DatePicker1Change(Sender: TObject);
begin
  // Если во время активности формы обнаруживаем изменение времени
 // относительно хранящегося в БД
 if Form6.Active and (DataModule2.T_operationsoDateTime.Value <>
 (DatePicker1.Date + TimePicker1.Time)) then
 begin
 // Переводим НД в режим редактирования если он не находится
 // в данном режиме
 if DataModule2.T_operations.State = dsBrowse then
 DataModule2.T_operations.edit;
 // Формируем тип TDateTime (выражается как сумма TDate и TTime)
 DataModule2.T_operationsoDateTime.Value := DatePicker1.Date +
 TimePicker1.Time;
end;
end;

procedure TForm6.FormCloseQuery(Sender: TObject; var CanClose: Boolean);
begin
  if P_ModifyData.Visible then
   begin
   // Если мы редактируем данные, то выводим сообщение
    ShowMessage ('В данный момент происходит изменения перечня товаров в рамках операции, вы не можете завершить оформление');
   // Устанавливаем для флага CanClose значение говорящее,
   // что нельзя закрыть форму
   CanClose := false;
   //при помощи команды exit() игнорируем оставшийся код
   exit();
   end;
   // Если редактирование состава товаров операции не
   // то проверяем количество товаров в операции и если их нет
   if DataModule2.T_op_goods_list.RecordCount = 0 then
   begin // то выполняем отмену изменений в таблице операций
   if DataModule2.T_operations.State = dsEdit then
   DataModule2.T_operations.Cancel;
   // Удаляем запись об операции
   DataModule2.T_operations.Delete;
   end // В случае если в операции присутствуют товары,
   // то проверяем есть ли изменения в данных
   else if DataModule2.T_operations.State = dsEdit then
   begin // В случае если требуется сохранить изменения,
   // запрашивается подтверждение сохранения
   if MessageDlg('Подтвердить сохранение измененных данных операции',
   mtConfirmation, [mbYes, mbNo], 0) = mrYes then
   // Сохраняем изменения при получении подтверждения
   DataModule2.T_operations.post
   else // в противном случае выполняем отмену
   DataModule2.T_operations.Cancel;
   end;
   // Обновляем данные в Q_v_goods_operations имитируя
   // срабатывание события AfterPost
   DataModule2.T_operationsAfterPost(nil);
   // Обновляем данные в НД Q_v_storage
   DataModule2.Q_v_storage.Requery;
end;

procedure TForm6.FormShow(Sender: TObject);
begin
  if DataModule2.T_operationsoIsSale.Value = 1 then
   begin
    GB_Supplier.Visible := false;
    GB_DateTime.Caption := 'Дата и время продажи товара';
   end
   else
   begin
     GB_DateTime.Caption := 'Дата и время поставки товара';
     GB_Supplier.Visible := true;
   end;
end;

procedure TForm6.TimePicker1Change(Sender: TObject);
begin
  // Если во время активности формы обнаруживаем изменение времени
 // относительно хранящегося в БД
 if Form6.Active and (DataModule2.T_operationsoDateTime.Value <>
 (DatePicker1.Date + TimePicker1.Time)) then
 begin
 // Переводим НД в режим редактирования если он не находится
 // в данном режиме
 if DataModule2.T_operations.State = dsBrowse then
 DataModule2.T_operations.edit;
 // Формируем тип TDateTime (выражается как сумма TDate и TTime)
 DataModule2.T_operationsoDateTime.Value := DatePicker1.Date +
 TimePicker1.Time;
end;
end;

end.
